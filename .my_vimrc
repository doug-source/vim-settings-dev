" -----------Variables-----------------------------------------------------------
let g:is_windows = &term == "win32" || "pcterm" || has("gui_win32") || has('win32')
let g:is_linux = !g:is_windows

"
" Ensures dirname (user's home directory) is really the correct.
" Depending of the current working directory (cwd) from command line where vim is
" started, the commands pwd() and expand('%:p:h') return the cwd and not the
" user's home directory (that it is the directory most correct and required in
" this context and for being where is the vim's setting file)
"
if g:is_windows
    let s:dirname = trim(system('for %%F in ("' . $MYVIMRC . '") do set dirname=%%~dpF & echo %dirname%'))
else
    let s:dirname = trim(system('dirname ' . $MYVIMRC))
endif

let g:vi_dir = s:dirname . (g:is_windows ? '/vimfiles' : '/.vim')

" Ensures the vim does not started if 'development cycle flag number 1' is already been right
if empty(glob(g:vi_dir . '/markers/.devRunning'))
    finish
endif
" Ensures the vim does not started if 'development cycle flag number 2' is already been right
if !empty(glob(g:vi_dir . '/markers/.vimRunning'))
    finish
endif

try
    " ---------- Default Settings ---------------------------------------------------
    execute 'source ' . g:vi_dir . '/sources/run-settings-default.vim'
catch /.*/
    " Used when anormal situations occur
    echo '!!! ðŸ’£ðŸ’£ðŸ’£ ERROR ðŸ’£ðŸ’£ðŸ’£ !!!'
    finish
endtry

" ---------- Plugins ------------------------------------------------------------

" ******** Vim-Plug settings *****************************************
execute 'source ' . g:vi_dir . '/sources/ini-vim-plug.vim'

" ******** Vim-Plug's plugins settings *******************************
execute 'source ' . g:vi_dir . '/sources/run-load-plugins.vim'

" ******** NERDTree settings *****************************************
execute 'source ' . g:vi_dir . '/sources/ini-NERDTree.vim'

" ******** Vim-Emmet settings ****************************************
execute 'source ' . g:vi_dir . '/sources/ini-emmet.vim'

" ******** TagBarToogle settings *************************************
execute 'source ' . g:vi_dir . '/sources/ini-tag-bar-toogle.vim'

" ******** Vim-air-line settings *************************************
execute 'source ' . g:vi_dir . '/sources/ini-vim-airline.vim'

" ******** Vim-air-line-theme settings *************************************
execute 'source ' . g:vi_dir . '/sources/ini-vim-airline-themes.vim'

" ******** nerd-fonts settings ************************************
execute 'source ' . g:vi_dir . '/sources/ini-nerd-fonts.vim'

" ******** coc.nvim settings *****************************************
execute 'source ' . g:vi_dir . '/sources/ini-coc-nvim.vim'

" ******** ctrlP settings ************************************
execute 'source ' . g:vi_dir . '/sources/ini-ctrlp.vim'

" ******** ale settings ************************************
execute 'source ' . g:vi_dir . '/sources/ini-ale.vim'

" ******** dev-icons settings ************************************
execute 'source ' . g:vi_dir . '/sources/ini-devicons.vim'

" ******** nerdtree-git-plugin settings ************************************
execute 'source ' . g:vi_dir . '/sources/ini-nerdtree-git-plugin.vim'

" ******** nerdtree-syntax-highlight settings ************************************
execute 'source ' . g:vi_dir . '/sources/ini-vim-nerdtree-syntax-highlight.vim'

" ******** bbye settings ************************************
execute 'source ' . g:vi_dir . '/sources/ini-bbye.vim'

" ******** vim-markdown settings ************************************
execute 'source ' . g:vi_dir . '/sources/ini-vim-markdown.vim'

" ******** coc-intelephense settings ************************************
execute 'source ' . g:vi_dir . '/sources/ini-coc-intelephense.vim'

" ---------- Custom settings for vi -------------------------

execute 'source ' . g:vi_dir . '/sources/run-my-remaps.vim'

" ****** Skeleton loads ******
execute 'source ' . g:vi_dir . '/sources/run-skeletons.vim'

" -------------------------------------------------------------------------------




